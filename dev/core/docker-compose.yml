version: "2.4"

services:
  # Service server
  al_service_server:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    ports:
      - "5003:5003"
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    working_dir: /opt/alv4/
    command: python3 /opt/alv4/assemblyline-service-server/assemblyline_service_server/app.py
    networks:
      - default
      - registration

  # Create test data
  create_test_data:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    environment:
      DEV_ADMIN_PASS: $DEV_ADMIN_PASS
      DEV_USER_PASS: $DEV_USER_PASS
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    working_dir: /opt/alv4/assemblyline-base/assemblyline/odm/random_data/
    command: python3 create_test_data.py nosvc nosigs

  # frontend
  al_frontend:
    image: cccs/assemblyline-ui-frontend:stable
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ${PATH_REWRITE:-.}/config/certs/:/etc/certs/
    command: ["serve", "-s", "-l", "3000", '--ssl-key', '/etc/certs/tls.key', '--ssl-cert', '/etc/certs/tls.crt']


  # UI
  al_ui:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    ports:
      - "5000:5000"
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    working_dir: /opt/alv4/assemblyline-ui/assemblyline_ui/
    command: python3 app.py

  # # internal UI
  # al_internal_ui:
  #   container_name: internal-ui
  #   image: cccs/assemblyline_dev:4.5.0
  #   volumes:
  #     - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
  #     - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
  #   environment:
  #     AL_UNSECURED_UI: "true"
  #   working_dir: /opt/alv4/assemblyline-ui/assemblyline_ui/
  #   command: python3 app.py

  # SocketIO Server
  al_socketio:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    ports:
      - "5002:5002"
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    working_dir: /opt/alv4/assemblyline-ui/assemblyline_ui/
    command: python3 socketsrv.py

  # Alerter
  al_alerter:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    command: python3 /opt/alv4/assemblyline-core/assemblyline_core/alerter/run_alerter.py
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi",
        ]

  # Expiry
  al_expiry:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    command: python3 /opt/alv4/assemblyline-core/assemblyline_core/expiry/run_expiry.py
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi",
        ]

  # Elasticsearch Metrics
  al_elastic_metrics:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    command: python3 /opt/alv4/assemblyline-core/assemblyline_core/metrics/es_metrics.py
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi",
        ]

  # Metrics aggregator
  al_metrics:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    command: python3 /opt/alv4/assemblyline-core/assemblyline_core/metrics/run_metrics_aggregator.py

  # Hearbeat manager
  al_heartbeat:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    command: python3 /opt/alv4/assemblyline-core/assemblyline_core/metrics/run_heartbeat_manager.py
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi",
        ]

  # Stats aggregator
  al_stats:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    command: python3 /opt/alv4/assemblyline-core/assemblyline_core/metrics/run_statistics_aggregator.py

  # Workflow
  al_workflow:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    command: python3 /opt/alv4/assemblyline-core/assemblyline_core/workflow/run_workflow.py
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi",
        ]

  al_plumber:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    command: python3 /opt/alv4/assemblyline-core/assemblyline_core/plumber/run_plumber.py
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi",
        ]

  # Dispatcher processes
  al_dispatcher:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    environment:
      SKIP_SERVICE_SETUP: "true"
    command: python3 /opt/alv4/assemblyline-core/assemblyline_core/dispatching
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi",
        ]

  # Ingester Processes
  al_ingester:
    image: cccs/assemblyline_dev:4.5.0
    env_file:
      - .env
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
    command: python3 /opt/alv4/assemblyline-core/assemblyline_core/ingester
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi",
        ]

# You can use this if you want a jupyter notebook to debug something in development
#  notebook:
#    image: cccs/assemblyline_management:latest
#    volumes:
#      - ./config/:/etc/assemblyline/
#      - ../../../:/opt/alv4/
#      - ../../../notebook_data/:/var/lib/assemblyline/jupyter/data/
#    ports:
#      - "8888:8888"

networks:
  default:
    external: true
    name: external
  registration:
    driver: bridge
    name: al_registration
