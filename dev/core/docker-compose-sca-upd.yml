version: "2.4"

services:
  al_scaler:
    image: cccs/assemblyline_dev:4.3.1
    environment:
      DOCKER_CONFIGURATION_PATH: /mount/service_config/
      DOCKER_CONFIGURATION_VOLUME: service_config
      UI_SERVER: "https://nginx"
      AL_CORE_NETWORK: external
    volumes:
      - type: volume
        source: service_config
        target: /mount/service_config/
        read_only: false
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
      - /var/run/docker.sock:/var/run/docker.sock # NOTE, this container has access to docker socket (this is like root)
    command: python3 /opt/alv4/assemblyline-core/assemblyline_core/scaler/run_scaler.py
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi",
        ]

  al_updater:
    image: cccs/assemblyline_dev:4.3.1
    environment:
      UI_SERVER: "https://nginx"
      AL_CORE_NETWORK: external
      CONTAINER_CHECK_INTERVAL: 30
      UPDATE_CHECK_INTERVAL: 30
    volumes:
      - ${PATH_REWRITE:-.}/config/:/etc/assemblyline/
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
      - /var/run/docker.sock:/var/run/docker.sock # NOTE, this container has access to docker socket (this is like root)
    command: python3 /opt/alv4/assemblyline-core/assemblyline_core/updater/run_updater.py
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi",
        ]

networks:
  default:
    external: true
    name: external

volumes:
  service_config:
    name: service_config
